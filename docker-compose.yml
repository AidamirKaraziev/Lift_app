version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    environment:
      - API_V1_STR=/api/v1
      - SECRET_KEY=${SECRET_KEY}
      - SERVER_NAME=${SERVER_NAME}
      - SERVER_HOST=${SERVER_HOST}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - PROJECT_NAME=${PROJECT_NAME}
      - SENTRY_DSN=${SENTRY_DSN}
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - SQLALCHEMY_DATABASE_URI=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      - SMTP_TLS=${SMTP_TLS}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL}
      - EMAILS_FROM_NAME=${EMAILS_FROM_NAME}
      - EMAIL_RESET_TOKEN_EXPIRE_HOURS=${EMAIL_RESET_TOKEN_EXPIRE_HOURS}
      - EMAIL_TEMPLATES_DIR=${EMAIL_TEMPLATES_DIR}
      - EMAILS_ENABLED=${EMAILS_ENABLED}
      - EMAIL_TEST_USER=${EMAIL_TEST_USER}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD}
      - USERS_OPEN_REGISTRATION=${USERS_OPEN_REGISTRATION}
    depends_on:
      - postgres
      - redis
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    command: ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

volumes:
  postgres_data: